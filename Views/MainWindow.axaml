<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Foobar.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:CompileBindings="True"
		x:DataType="vm:MainWindowViewModel"
        x:Class="Foobar.Views.MainWindow"
        x:Name="MyWindow"
        xmlns:local="clr-namespace:Foobar.Views"
        xmlns:model="using:Foobar.Models"
        Title="Foobar">

<!-- ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="10"
        SystemDecorations="BorderOnly" -->

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Resources>
        <local:ColorToBrushExceptionConverter x:Key="ColorToBrushExceptionConverter" />
    </Window.Resources>

    <SplitView
        IsPaneOpen="True"
        DisplayMode="Inline"
        OpenPaneLength="300"
    >
        <SplitView.Pane>
            <StackPanel Orientation="Vertical">
                <!-- 
                <ListBox x:Name="animals">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border
                                BorderBrush="Blue" BorderThickness="1" 
                                CornerRadius="4" Padding="4"
                            >
                                <StackPanel>
                                    <TextBlock></TextBlock>
                                    <TextBlock Text="{Binding}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                -->

                <DataGrid
                    x:Name="Tables"
                    GridLinesVisibility="All"
                    ItemsSource="{Binding Tables}"
                >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="False"/>

                        <DataGridTemplateColumn Header="Active">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="model:TableModel">
                                    <Button Command="{Binding DataContext.ActivateTableCommand, ElementName=MyWindow}" CommandParameter="{Binding}">][</Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Color">

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="model:TableModel">
                                    <Rectangle Fill="{Binding Color, Converter={StaticResource ColorToBrushExceptionConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate DataType="model:TableModel">
                                    <ColorPicker Color="{Binding Color}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>

                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                </DataGrid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,0,0,10">
                    <Button Click="OnAddTable" HorizontalAlignment="Stretch">Add table</Button>
                    <Button Click="OnRemoveTable" HorizontalAlignment="Stretch">Remove table</Button>
                </StackPanel>


                <DataGrid
                    x:Name="MyGrid"
                    GridLinesVisibility="All"
                    IsReadOnly="False"
                    ItemsSource="{Binding ActiveTable.Points, UpdateSourceTrigger=PropertyChanged}"
                >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="X" Binding="{Binding X}" IsReadOnly="False"/>
                        <DataGridTextColumn Header="Y" Binding="{Binding Y}" IsReadOnly="False"/>
                              
                        <!-- <DataGridTemplateColumn Header="Y">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="model:Person">
                                    <TextBlock Text="{Binding AgeInYears, StringFormat='{}{0} years'}" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate DataType="model:Person">
                                    <NumericUpDown Value="{Binding AgeInYears}"  
                                    FormatString="N0" Minimum="0" Maximum="120"  
                                    HorizontalAlignment="Stretch"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn> -->

                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Click="OnAddPoint" HorizontalAlignment="Stretch">Add point</Button>
                    <Button Click="OnRemovePoint" HorizontalAlignment="Stretch">Remove point</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                    <Button Click="OnImport" HorizontalAlignment="Stretch">Import points</Button>
                    <Button Click="OnExport" HorizontalAlignment="Stretch">Export points</Button>
                </StackPanel>

                <ComboBox Background="{DynamicResource ThemeControlMidBrush}"
                    ItemsSource="{Binding StyleChoices}"
                    SelectedValue="{Binding SelectedStyle}"
                >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Label}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

            </StackPanel>
        </SplitView.Pane>
        
        <local:DrawingCanvas
            x:Name="MyCanvas"
            Background="{DynamicResource ThemeBackgroundColor}"
            LineStyle="{Binding SelectedStyle.Style}"
            Tables="{Binding Tables}"
        >
            <!-- <Ellipse Fill="{DynamicResource HighlightBrush}" Width="58" Height="58" Canvas.Left="400" Canvas.Top="10"/> -->
        </local:DrawingCanvas>

    </SplitView>
</Window>
